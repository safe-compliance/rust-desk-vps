name: Build Agent EXE

on:
  workflow_dispatch:
  push:
    paths:
      - 'WindowsAgentAIOInstall.ps1'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4

      - name: Enable TLS1.2 + ExecutionPolicy Bypass
        shell: powershell
        run: |
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Set-ExecutionPolicy Bypass -Scope Process -Force

      # ⚠️ Baixa o ps2exe.ps1 correto (UMA linha, caminho completo!)
      - name: Download ps2exe.ps1 (raw)
        shell: powershell
        run: |
          Invoke-WebRequest 'https://raw.githubusercontent.com/MScholtes/PS2EXE/master/ps2exe.ps1' -UseBasicParsing -OutFile .\ps2exe.ps1

      # Compila o seu WindowsAgentAIOInstall.ps1 em EXE
      - name: Compile EXE
        shell: powershell
        run: |
          $src = Resolve-Path .\WindowsAgentAIOInstall.ps1
          $out = Join-Path $PWD 'SafeCompliance-RustDesk-Agent.exe'
          # usa o ps2exe.ps1 “raw”; evita parâmetros que variam por versão
          powershell -ExecutionPolicy Bypass -File .\ps2exe.ps1 `
            -inputFile  $src `
            -outputFile $out `
            -noConsole `
            -requireAdmin `
            -title   'SafeCompliance RustDesk Agent' `
            -company 'SafeCompliance' `
            -product 'RustDesk Agent Installer'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SafeCompliance-RustDesk-Agent.exe
          path: SafeCompliance-RustDesk-Agent.exe

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Agent build ${{ github.run_number }}"
          files: SafeCompliance-RustDesk-Agent.exe
